// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data/proto/matcher.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// All pattern matchers in our system can be expressed in the form
// (A or B or C) and (not D) and (not E)
// or, equivalently,
// (A or B or C) and not (D or E)
// if we ever need a richer predicate language, we will need to make this
// more complicated.
type Matcher struct {
	Patterns []string `protobuf:"bytes,1,rep,name=patterns" json:"patterns,omitempty"`
}

func (m *Matcher) Reset()                    { *m = Matcher{} }
func (m *Matcher) String() string            { return proto1.CompactTextString(m) }
func (*Matcher) ProtoMessage()               {}
func (*Matcher) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Matcher) GetPatterns() []string {
	if m != nil {
		return m.Patterns
	}
	return nil
}

func init() {
	proto1.RegisterType((*Matcher)(nil), "wm.data.Matcher")
}

func init() { proto1.RegisterFile("data/proto/matcher.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 123 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0x49, 0x2c, 0x49,
	0xd4, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0xcf, 0x4d, 0x2c, 0x49, 0xce, 0x48, 0x2d, 0xd2, 0x03,
	0xf3, 0x84, 0xd8, 0xcb, 0x73, 0xf5, 0x40, 0x92, 0x4a, 0xaa, 0x5c, 0xec, 0xbe, 0x10, 0x19, 0x21,
	0x29, 0x2e, 0x8e, 0x82, 0xc4, 0x92, 0x92, 0xd4, 0xa2, 0xbc, 0x62, 0x09, 0x46, 0x05, 0x66, 0x0d,
	0xce, 0x20, 0x38, 0xdf, 0x49, 0x2f, 0x4a, 0x27, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39,
	0x3f, 0x57, 0xbf, 0x3c, 0x33, 0x2f, 0x25, 0x37, 0x33, 0x27, 0x27, 0x35, 0x2f, 0x5d, 0x3f, 0x37,
	0xb3, 0x38, 0x43, 0x1f, 0x61, 0x8f, 0x35, 0x98, 0x4c, 0x62, 0x03, 0x53, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x88, 0xae, 0x5b, 0xb7, 0x82, 0x00, 0x00, 0x00,
}
